// Generated by purs version 0.15.15
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_State_Class from "../Control.Monad.State.Class/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Halogen_Component from "../Halogen.Component/index.js";
import * as Halogen_HTML_Core from "../Halogen.HTML.Core/index.js";
import * as Halogen_HTML_Elements from "../Halogen.HTML.Elements/index.js";
import * as Halogen_HTML_Events from "../Halogen.HTML.Events/index.js";
import * as Halogen_HTML_Properties from "../Halogen.HTML.Properties/index.js";
import * as Halogen_Query_HalogenM from "../Halogen.Query.HalogenM/index.js";
import * as Store_Theme from "../Store.Theme/index.js";
var pure = /* #__PURE__ */ Control_Applicative.pure(
  Halogen_Query_HalogenM.applicativeHalogenM
);
var bind = /* #__PURE__ */ Control_Bind.bind(
  Halogen_Query_HalogenM.bindHalogenM
);
var gets = /* #__PURE__ */ Control_Monad_State_Class.gets(
  Halogen_Query_HalogenM.monadStateHalogenM
);
var modify_ = /* #__PURE__ */ Control_Monad_State_Class.modify_(
  Halogen_Query_HalogenM.monadStateHalogenM
);
var Initialize = /* #__PURE__ */ (function () {
  function Initialize() {}
  Initialize.value = new Initialize();
  return Initialize;
})();
var ToggleTheme = /* #__PURE__ */ (function () {
  function ToggleTheme() {}
  ToggleTheme.value = new ToggleTheme();
  return ToggleTheme;
})();
var render = function (state) {
  var themeIcon = function (mode) {
    if (mode instanceof Store_Theme.Dark) {
      return "\u2600\ufe0f";
    }
    if (mode instanceof Store_Theme.Light) {
      return "\ud83c\udf19";
    }
    throw new Error(
      "Failed pattern match at Components.Header (line 65, column 22 - line 67, column 25): " +
        [mode.constructor.name]
    );
  };
  var borderColor = (function () {
    if (state.theme.mode instanceof Store_Theme.Dark) {
      return "rgba(255, 255, 255, 0.1)";
    }
    if (state.theme.mode instanceof Store_Theme.Light) {
      return "rgba(50, 55, 60, 0.1)";
    }
    throw new Error(
      "Failed pattern match at Components.Header (line 61, column 19 - line 63, column 45): " +
        [state.theme.mode.constructor.name]
    );
  })();
  return Halogen_HTML_Elements.header([
    Halogen_HTML_Properties.class_("header"),
    Halogen_HTML_Properties.style(
      "background-color: " +
        (state.theme.bg +
          ("f0; " +
            ("color: " +
              (state.theme.color +
                ("; " +
                  ("position: fixed; top: 0; width: 100%; z-index: 10; " +
                    ("padding: 16px 32px; " +
                      ("border-bottom: 1px solid " +
                        (borderColor +
                          ("; " +
                            ("backdrop-filter: blur(10px); " +
                              "display: flex; justify-content: space-between; align-items: center;")))))))))))
    )
  ])([
    Halogen_HTML_Elements.h1([
      Halogen_HTML_Properties.class_("logo"),
      Halogen_HTML_Properties.style(
        "font-size: 30px; font-weight: bold; margin: 0; cursor: pointer;"
      )
    ])([Halogen_HTML_Core.text("Polytorus")]),
    Halogen_HTML_Elements.button([
      Halogen_HTML_Properties.class_("theme-toggle"),
      Halogen_HTML_Properties.style(
        "background: none; border: none; cursor: pointer; " +
          ("padding: 8px; border-radius: 4px; color: " + state.theme.color)
      ),
      Halogen_HTML_Events.onClick(function (v) {
        return ToggleTheme.value;
      })
    ])([Halogen_HTML_Core.text(themeIcon(state.theme.mode))])
  ]);
};
var initialState = function (v) {
  return {
    theme: Store_Theme.initialTheme
  };
};
var handleAction = function (v) {
  if (v instanceof Initialize) {
    return pure(Data_Unit.unit);
  }
  if (v instanceof ToggleTheme) {
    return bind(
      gets(function (v1) {
        return v1.theme;
      })
    )(function (currentTheme) {
      var newMode = (function () {
        if (currentTheme.mode instanceof Store_Theme.Light) {
          return Store_Theme.Dark.value;
        }
        if (currentTheme.mode instanceof Store_Theme.Dark) {
          return Store_Theme.Light.value;
        }
        throw new Error(
          "Failed pattern match at Components.Header (line 75, column 19 - line 77, column 36): " +
            [currentTheme.mode.constructor.name]
        );
      })();
      var newTheme = Store_Theme.getThemeForMode(newMode);
      return modify_(function (v1) {
        var $15 = {};
        for (var $16 in v1) {
          if ({}.hasOwnProperty.call(v1, $16)) {
            $15[$16] = v1[$16];
          }
        }
        $15.theme = newTheme;
        return $15;
      });
    });
  }
  throw new Error(
    "Failed pattern match at Components.Header (line 70, column 16 - line 79, column 37): " +
      [v.constructor.name]
  );
};
var component = /* #__PURE__ */ (function () {
  return Halogen_Component.mkComponent({
    initialState: initialState,
    render: render,
    eval: Halogen_Component.mkEval({
      handleQuery: Halogen_Component.defaultEval.handleQuery,
      receive: Halogen_Component.defaultEval.receive,
      finalize: Halogen_Component.defaultEval.finalize,
      handleAction: handleAction,
      initialize: new Data_Maybe.Just(Initialize.value)
    })
  });
})();
export {
  Initialize,
  ToggleTheme,
  component,
  initialState,
  render,
  handleAction
};
