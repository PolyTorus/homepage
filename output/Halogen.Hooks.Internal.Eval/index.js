// Generated by purs version 0.15.15
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Applicative_Free from "../Control.Applicative.Free/index.js";
import * as Control_Apply from "../Control.Apply/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Free from "../Control.Monad.Free/index.js";
import * as Control_Monad_State_Class from "../Control.Monad.State.Class/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Bifunctor from "../Data.Bifunctor/index.js";
import * as Data_Coyoneda from "../Data.Coyoneda/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Function from "../Data.Function/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_HeytingAlgebra from "../Data.HeytingAlgebra/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Newtype from "../Data.Newtype/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Effect_Exception_Unsafe from "../Effect.Exception.Unsafe/index.js";
import * as Effect_Ref from "../Effect.Ref/index.js";
import * as Effect_Unsafe from "../Effect.Unsafe/index.js";
import * as Foreign_Object from "../Foreign.Object/index.js";
import * as Halogen_Hooks_HookM from "../Halogen.Hooks.HookM/index.js";
import * as Halogen_Hooks_Internal_Eval_Types from "../Halogen.Hooks.Internal.Eval.Types/index.js";
import * as Halogen_Hooks_Internal_Types from "../Halogen.Hooks.Internal.Types/index.js";
import * as Halogen_Hooks_Internal_UseHookF from "../Halogen.Hooks.Internal.UseHookF/index.js";
import * as Halogen_Query_HalogenM from "../Halogen.Query.HalogenM/index.js";
import * as Halogen_Query_HalogenQ from "../Halogen.Query.HalogenQ/index.js";
import * as Unsafe_Reference from "../Unsafe.Reference/index.js";
var fromJust = /* #__PURE__ */ Data_Maybe.fromJust();
var unsafeIndex = /* #__PURE__ */ Data_Array.unsafeIndex();
var bind = /* #__PURE__ */ Control_Bind.bind(
  Halogen_Query_HalogenM.bindHalogenM
);
var discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit);
var discard1 = /* #__PURE__ */ discard(Halogen_Query_HalogenM.bindHalogenM);
var when = /* #__PURE__ */ Control_Applicative.when(
  Halogen_Query_HalogenM.applicativeHalogenM
);
var sequence_ = /* #__PURE__ */ Data_Foldable.sequence_(
  Halogen_Query_HalogenM.applicativeHalogenM
)(Data_Foldable.foldableArray);
var eq = /* #__PURE__ */ Data_Eq.eq(
  Halogen_Hooks_Internal_Eval_Types.eqInterpretHookReason
);
var $$void = /* #__PURE__ */ Data_Functor["void"](
  Halogen_Query_HalogenM.functorHalogenM
);
var gets = /* #__PURE__ */ Control_Monad_State_Class.gets(
  Halogen_Query_HalogenM.monadStateHalogenM
);
var unwrap = /* #__PURE__ */ Data_Newtype.unwrap();
var get = /* #__PURE__ */ Control_Monad_State_Class.get(
  Halogen_Query_HalogenM.monadStateHalogenM
);
var pure1 = /* #__PURE__ */ Control_Applicative.pure(
  Halogen_Query_HalogenM.applicativeHalogenM
);
var map = /* #__PURE__ */ Data_Functor.map(Halogen_Hooks_HookM.functorHookM);
var unless = /* #__PURE__ */ Control_Applicative.unless(
  Halogen_Query_HalogenM.applicativeHalogenM
);
var bind1 = /* #__PURE__ */ Control_Bind.bind(Control_Monad_Free.freeBind);
var discard3 = /* #__PURE__ */ discard(Control_Monad_Free.freeBind);
var pure2 = /* #__PURE__ */ Control_Applicative.pure(
  Control_Monad_Free.freeApplicative
);
var void1 = /* #__PURE__ */ Data_Functor["void"](
  Control_Monad_Free.freeFunctor
);
var retractFreeAp = /* #__PURE__ */ Control_Applicative_Free.retractFreeAp(
  Halogen_Query_HalogenM.applicativeHalogenAp
);
var pure3 = /* #__PURE__ */ Control_Applicative.pure(
  Halogen_Hooks_HookM.applicativeHookM
);
var not1 = /* #__PURE__ */ Data_HeytingAlgebra.not(
  /* #__PURE__ */ Data_HeytingAlgebra.heytingAlgebraFunction(
    /* #__PURE__ */ Data_HeytingAlgebra.heytingAlgebraFunction(
      Data_HeytingAlgebra.heytingAlgebraBoolean
    )
  )
);
var applySecond = /* #__PURE__ */ Control_Apply.applySecond(
  Halogen_Hooks_HookM.applyHookM
);
var bimap = /* #__PURE__ */ Data_Bifunctor.bimap(Data_Bifunctor.bifunctorTuple);
var unsafeSetCell = function (index) {
  return function (a) {
    return function (array) {
      return fromJust(
        Data_Array.modifyAt(index)(Data_Function["const"](a))(array)
      );
    };
  };
};
var unsafeGetCell = function (index) {
  return function (array) {
    return unsafeIndex(array)(index);
  };
};
var stepIndex = function (index) {
  return function (array) {
    var $88 = ((index + 1) | 0) < Data_Array.length(array);
    if ($88) {
      return (index + 1) | 0;
    }
    return 0;
  };
};
var mkEval = function (inputEq) {
  return function (_evalHookM) {
    return function (_evalHook) {
      var executeHooksAndEffects = function (stateRef) {
        return function (reason) {
          return bind(_evalHook(reason))(function () {
            var v = Effect_Unsafe.unsafePerformEffect(
              Effect_Ref.read(stateRef)
            );
            return discard1(
              when(!Data_Array["null"](v.evalQueue))(
                (function () {
                  var runQueue = Effect_Unsafe.unsafePerformEffect(
                    function __do() {
                      Effect_Ref.modify_(function (v1) {
                        return {
                          componentRef: v1.componentRef,
                          effectCells: v1.effectCells,
                          input: v1.input,
                          memoCells: v1.memoCells,
                          queryFn: v1.queryFn,
                          refCells: v1.refCells,
                          stateCells: v1.stateCells,
                          evalQueue: [],
                          stateDirty: false
                        };
                      })(stateRef)();
                      return sequence_(v.evalQueue);
                    }
                  );
                  return discard1(runQueue)(function () {
                    var v1 = Effect_Unsafe.unsafePerformEffect(
                      Effect_Ref.read(stateRef)
                    );
                    var initializeOrStepReason =
                      eq(reason)(
                        Halogen_Hooks_Internal_Eval_Types.Initialize.value
                      ) ||
                      eq(reason)(Halogen_Hooks_Internal_Eval_Types.Step.value);
                    return when(v1.stateDirty && initializeOrStepReason)(
                      $$void(
                        executeHooksAndEffects(stateRef)(
                          Halogen_Hooks_Internal_Eval_Types.Step.value
                        )
                      )
                    );
                  });
                })()
              )
            )(function () {
              return gets(function ($217) {
                return (function (v1) {
                  return v1.result;
                })(unwrap($217));
              });
            });
          });
        };
      };
      return function (v) {
        if (v instanceof Halogen_Query_HalogenQ.Initialize) {
          return bind(get)(function (v1) {
            return bind(
              executeHooksAndEffects(v1.stateRef)(
                Halogen_Hooks_Internal_Eval_Types.Initialize.value
              )
            )(function () {
              return pure1(v.value0);
            });
          });
        }
        if (v instanceof Halogen_Query_HalogenQ.Query) {
          return bind(get)(function (v1) {
            var v2 = Effect_Unsafe.unsafePerformEffect(
              Effect_Ref.read(v1.stateRef)
            );
            if (v2.queryFn instanceof Data_Maybe.Nothing) {
              return pure1(v.value1(Data_Unit.unit));
            }
            if (v2.queryFn instanceof Data_Maybe.Just) {
              return _evalHookM(
                executeHooksAndEffects(v1.stateRef)(
                  Halogen_Hooks_Internal_Eval_Types.Step.value
                )
              )(
                Data_Coyoneda.unCoyoneda(function (g) {
                  var $218 = map(Data_Maybe.maybe(v.value1(Data_Unit.unit))(g));
                  var $219 = Halogen_Hooks_Internal_Eval_Types.fromQueryFn(
                    v2.queryFn.value0
                  );
                  return function ($220) {
                    return $218($219($220));
                  };
                })(v.value0)
              );
            }
            throw new Error(
              "Failed pattern match at Halogen.Hooks.Internal.Eval (line 46, column 5 - line 51, column 81): " +
                [v2.queryFn.constructor.name]
            );
          });
        }
        if (v instanceof Halogen_Query_HalogenQ.Action) {
          return bind(get)(function (v1) {
            return discard1(
              _evalHookM(
                executeHooksAndEffects(v1.stateRef)(
                  Halogen_Hooks_Internal_Eval_Types.Step.value
                )
              )(v.value0)
            )(function () {
              return pure1(v.value1);
            });
          });
        }
        if (v instanceof Halogen_Query_HalogenQ.Receive) {
          return bind(get)(function (v1) {
            var v2 = Effect_Unsafe.unsafePerformEffect(
              Effect_Ref.read(v1.stateRef)
            );
            return discard1(
              unless(inputEq(v2.input)(v.value0))(
                (function () {
                  var execute = Effect_Unsafe.unsafePerformEffect(
                    function __do() {
                      Effect_Ref.modify_(function (v3) {
                        return {
                          componentRef: v3.componentRef,
                          effectCells: v3.effectCells,
                          evalQueue: v3.evalQueue,
                          memoCells: v3.memoCells,
                          queryFn: v3.queryFn,
                          refCells: v3.refCells,
                          stateCells: v3.stateCells,
                          stateDirty: v3.stateDirty,
                          input: v.value0
                        };
                      })(v1.stateRef)();
                      return executeHooksAndEffects(v1.stateRef)(
                        Halogen_Hooks_Internal_Eval_Types.Step.value
                      );
                    }
                  );
                  return $$void(execute);
                })()
              )
            )(function () {
              return pure1(v.value1);
            });
          });
        }
        if (v instanceof Halogen_Query_HalogenQ.Finalize) {
          return bind(get)(function (v1) {
            return bind(
              executeHooksAndEffects(v1.stateRef)(
                Halogen_Hooks_Internal_Eval_Types.Finalize.value
              )
            )(function () {
              return pure1(v.value0);
            });
          });
        }
        throw new Error(
          "Failed pattern match at Halogen.Hooks.Internal.Eval (line 37, column 39 - line 74, column 11): " +
            [v.constructor.name]
        );
      };
    };
  };
};
var evalHookM = function (v) {
  return function (v1) {
    var interpretHalogenHook = function (v2) {
      if (v2 instanceof Halogen_Hooks_HookM.Modify) {
        return bind1(
          Control_Monad_Free.liftF(
            new Halogen_Query_HalogenM.State(function (state) {
              return new Data_Tuple.Tuple(state, state);
            })
          )
        )(function (v3) {
          var v4 = Effect_Unsafe.unsafePerformEffect(
            Effect_Ref.read(v3.stateRef)
          );
          return discard3(
            (function () {
              var v5 = Unsafe_Reference.unsafeRefEq(v4.componentRef)(
                v2.value0.value0
              );
              if (v5) {
                return pure2(Data_Unit.unit);
              }
              return Effect_Exception_Unsafe.unsafeThrow(
                "Attempted to use state-modifying `HookM` code outside the component where it was defined."
              );
            })()
          )(function () {
            var current = unsafeGetCell(v2.value0.value1)(v4.stateCells.queue);
            var next = v2.value1(current);
            return discard3(
              (function () {
                var v5 = Unsafe_Reference.unsafeRefEq(current)(next);
                if (v5) {
                  return pure2(Data_Unit.unit);
                }
                var newQueue = unsafeSetCell(v2.value0.value1)(next);
                var runHooks$prime = Effect_Unsafe.unsafePerformEffect(
                  function __do() {
                    Effect_Ref.modify_(function (s) {
                      return {
                        componentRef: s.componentRef,
                        effectCells: s.effectCells,
                        evalQueue: s.evalQueue,
                        input: s.input,
                        memoCells: s.memoCells,
                        queryFn: s.queryFn,
                        refCells: s.refCells,
                        stateCells: {
                          index: s.stateCells.index,
                          queue: newQueue(s.stateCells.queue)
                        },
                        stateDirty: true
                      };
                    })(v3.stateRef)();
                    return v;
                  }
                );
                return void1(runHooks$prime);
              })()
            )(function () {
              return pure2(v2.value2(next));
            });
          });
        });
      }
      if (v2 instanceof Halogen_Hooks_HookM.Subscribe) {
        return Control_Monad_Free.liftF(
          new Halogen_Query_HalogenM.Subscribe(v2.value0, v2.value1)
        );
      }
      if (v2 instanceof Halogen_Hooks_HookM.Unsubscribe) {
        return Control_Monad_Free.liftF(
          new Halogen_Query_HalogenM.Unsubscribe(v2.value0, v2.value1)
        );
      }
      if (v2 instanceof Halogen_Hooks_HookM.Lift) {
        return Control_Monad_Free.liftF(
          new Halogen_Query_HalogenM.Lift(v2.value0)
        );
      }
      if (v2 instanceof Halogen_Hooks_HookM.ChildQuery) {
        return Control_Monad_Free.liftF(
          new Halogen_Query_HalogenM.ChildQuery(v2.value0)
        );
      }
      if (v2 instanceof Halogen_Hooks_HookM.Raise) {
        return Control_Monad_Free.liftF(
          new Halogen_Query_HalogenM.Raise(v2.value0, v2.value1)
        );
      }
      if (v2 instanceof Halogen_Hooks_HookM.Par) {
        return Control_Monad_Free.liftF(
          new Halogen_Query_HalogenM.Par(
            retractFreeAp(
              Control_Applicative_Free.hoistFreeAp(
                (function () {
                  var $221 = evalHookM(v);
                  return function ($222) {
                    return Halogen_Query_HalogenM.HalogenAp(
                      Control_Applicative_Free.liftFreeAp($221($222))
                    );
                  };
                })()
              )(v2.value0)
            )
          )
        );
      }
      if (v2 instanceof Halogen_Hooks_HookM.Fork) {
        return Control_Monad_Free.liftF(
          new Halogen_Query_HalogenM.Fork(evalHookM(v)(v2.value0), v2.value1)
        );
      }
      if (v2 instanceof Halogen_Hooks_HookM.Kill) {
        return Control_Monad_Free.liftF(
          new Halogen_Query_HalogenM.Kill(v2.value0, v2.value1)
        );
      }
      if (v2 instanceof Halogen_Hooks_HookM.GetRef) {
        return Control_Monad_Free.liftF(
          new Halogen_Query_HalogenM.GetRef(v2.value0, v2.value1)
        );
      }
      throw new Error(
        "Failed pattern match at Halogen.Hooks.Internal.Eval (line 237, column 26 - line 302, column 31): " +
          [v2.constructor.name]
      );
    };
    return Control_Monad_Free.substFree(interpretHalogenHook)(v1);
  };
};
var evalHook = function (_evalHookM) {
  return function (_evalHook) {
    return function (reason) {
      return function (stateRef) {
        return function (v) {
          if (v instanceof Halogen_Hooks_Internal_UseHookF.UseState) {
            if (
              reason instanceof Halogen_Hooks_Internal_Eval_Types.Initialize
            ) {
              var identifier = Effect_Unsafe.unsafePerformEffect(
                function __do() {
                  var v1 = Effect_Ref.modify(function (s) {
                    return {
                      componentRef: s.componentRef,
                      effectCells: s.effectCells,
                      evalQueue: s.evalQueue,
                      input: s.input,
                      memoCells: s.memoCells,
                      queryFn: s.queryFn,
                      refCells: s.refCells,
                      stateDirty: s.stateDirty,
                      stateCells: {
                        index: s.stateCells.index,
                        queue: Data_Array.snoc(s.stateCells.queue)(v.value0)
                      }
                    };
                  })(stateRef)();
                  return new Data_Tuple.Tuple(
                    v1.componentRef,
                    (Data_Array.length(v1.stateCells.queue) - 1) | 0
                  );
                }
              );
              return pure2(
                v.value1(new Data_Tuple.Tuple(v.value0, identifier))
              );
            }
            var v1 = Effect_Unsafe.unsafePerformEffect(function __do() {
              var v2 = Effect_Ref.read(stateRef)();
              Effect_Ref.modify_(function (v3) {
                return {
                  componentRef: v3.componentRef,
                  effectCells: v3.effectCells,
                  evalQueue: v3.evalQueue,
                  input: v3.input,
                  memoCells: v3.memoCells,
                  queryFn: v3.queryFn,
                  refCells: v3.refCells,
                  stateDirty: v3.stateDirty,
                  stateCells: {
                    queue: v3.stateCells.queue,
                    index: stepIndex(v2.stateCells.index)(v2.stateCells.queue)
                  }
                };
              })(stateRef)();
              return {
                value: unsafeGetCell(v2.stateCells.index)(v2.stateCells.queue),
                identifier: new Data_Tuple.Tuple(
                  v2.componentRef,
                  v2.stateCells.index
                )
              };
            });
            return pure2(
              v.value1(new Data_Tuple.Tuple(v1.value, v1.identifier))
            );
          }
          if (v instanceof Halogen_Hooks_Internal_UseHookF.UseQuery) {
            var handler$prime = function ($223) {
              return v.value1(Halogen_Hooks_Internal_Types.toQueryValue($223));
            };
            return pure2(
              Effect_Unsafe.unsafePerformEffect(function __do() {
                Effect_Ref.modify_(function (v1) {
                  return {
                    componentRef: v1.componentRef,
                    effectCells: v1.effectCells,
                    evalQueue: v1.evalQueue,
                    input: v1.input,
                    memoCells: v1.memoCells,
                    refCells: v1.refCells,
                    stateCells: v1.stateCells,
                    stateDirty: v1.stateDirty,
                    queryFn: new Data_Maybe.Just(
                      Halogen_Hooks_Internal_Eval_Types.toQueryFn(handler$prime)
                    )
                  };
                })(stateRef)();
                return v.value2;
              })
            );
          }
          if (v instanceof Halogen_Hooks_Internal_UseHookF.UseEffect) {
            if (
              reason instanceof Halogen_Hooks_Internal_Eval_Types.Initialize
            ) {
              return pure2(
                Effect_Unsafe.unsafePerformEffect(
                  (function () {
                    var $$eval = function (index) {
                      return bind(
                        _evalHookM(
                          _evalHook(
                            Halogen_Hooks_Internal_Eval_Types.Queued.value
                          )
                        )(v.value1)
                      )(function (mbFinalizer) {
                        var finalizer = Data_Maybe.fromMaybe(
                          pure3(Data_Unit.unit)
                        )(mbFinalizer);
                        var updateQueue = function (st) {
                          return unsafeSetCell(index)(
                            new Data_Tuple.Tuple(v.value0, finalizer)
                          )(st);
                        };
                        return pure1(
                          Effect_Unsafe.unsafePerformEffect(
                            Effect_Ref.modify_(function (s) {
                              return {
                                componentRef: s.componentRef,
                                evalQueue: s.evalQueue,
                                input: s.input,
                                memoCells: s.memoCells,
                                queryFn: s.queryFn,
                                refCells: s.refCells,
                                stateCells: s.stateCells,
                                stateDirty: s.stateDirty,
                                effectCells: {
                                  index: s.effectCells.index,
                                  queue: updateQueue(s.effectCells.queue)
                                }
                              };
                            })(stateRef)
                          )
                        );
                      });
                    };
                    var initializeState = function (st) {
                      return {
                        input: st.input,
                        componentRef: st.componentRef,
                        queryFn: st.queryFn,
                        stateCells: st.stateCells,
                        memoCells: st.memoCells,
                        refCells: st.refCells,
                        stateDirty: st.stateDirty,
                        evalQueue: Data_Array.snoc(st.evalQueue)(
                          $$eval(Data_Array.length(st.effectCells.queue))
                        ),
                        effectCells: {
                          index: st.effectCells.index,
                          queue: Data_Array.snoc(st.effectCells.queue)(
                            new Data_Tuple.Tuple(
                              v.value0,
                              pure3(Data_Unit.unit)
                            )
                          )
                        }
                      };
                    };
                    return function __do() {
                      Effect_Ref.modify_(initializeState)(stateRef)();
                      return v.value2;
                    };
                  })()
                )
              );
            }
            if (reason instanceof Halogen_Hooks_Internal_Eval_Types.Queued) {
              return pure2(v.value2);
            }
            if (reason instanceof Halogen_Hooks_Internal_Eval_Types.Step) {
              return pure2(
                Effect_Unsafe.unsafePerformEffect(function __do() {
                  var v1 = Effect_Ref.read(stateRef)();
                  var nextIndex = stepIndex(v1.effectCells.index)(
                    v1.effectCells.queue
                  );
                  var v2 = unsafeGetCell(v1.effectCells.index)(
                    v1.effectCells.queue
                  );
                  if (
                    v.value0 instanceof Data_Maybe.Just &&
                    v2.value0 instanceof Data_Maybe.Just
                  ) {
                    var memos$prime = {
                      old: Halogen_Hooks_Internal_Types.fromMemoValues(
                        v2.value0.value0
                      ),
                      new: Halogen_Hooks_Internal_Types.fromMemoValues(
                        v.value0.value0
                      )
                    };
                    var $171 =
                      Foreign_Object.isEmpty(memos$prime["new"].memos) ||
                      not1(memos$prime["new"].eq)(memos$prime.old.memos)(
                        memos$prime["new"].memos
                      );
                    if ($171) {
                      var $$eval = bind(
                        _evalHookM(
                          _evalHook(
                            Halogen_Hooks_Internal_Eval_Types.Queued.value
                          )
                        )(applySecond(v2.value1)(v.value1))
                      )(function (mbFinalizer) {
                        var v3 = Effect_Unsafe.unsafePerformEffect(
                          Effect_Ref.read(stateRef)
                        );
                        var newFinalizer = Data_Maybe.fromMaybe(
                          pure3(Data_Unit.unit)
                        )(mbFinalizer);
                        var newValue = new Data_Tuple.Tuple(
                          v.value0,
                          newFinalizer
                        );
                        var newQueue = unsafeSetCell(v1.effectCells.index)(
                          newValue
                        )(v3.effectCells.queue);
                        return pure1(
                          Effect_Unsafe.unsafePerformEffect(
                            Effect_Ref.modify_(function (v4) {
                              return {
                                componentRef: v4.componentRef,
                                evalQueue: v4.evalQueue,
                                input: v4.input,
                                memoCells: v4.memoCells,
                                queryFn: v4.queryFn,
                                refCells: v4.refCells,
                                stateCells: v4.stateCells,
                                stateDirty: v4.stateDirty,
                                effectCells: {
                                  index: v4.effectCells.index,
                                  queue: newQueue
                                }
                              };
                            })(stateRef)
                          )
                        );
                      });
                      Effect_Ref.modify_(function (s) {
                        return {
                          componentRef: s.componentRef,
                          input: s.input,
                          memoCells: s.memoCells,
                          queryFn: s.queryFn,
                          refCells: s.refCells,
                          stateCells: s.stateCells,
                          stateDirty: s.stateDirty,
                          evalQueue: Data_Array.snoc(s.evalQueue)($$eval),
                          effectCells: {
                            queue: s.effectCells.queue,
                            index: nextIndex
                          }
                        };
                      })(stateRef)();
                      return v.value2;
                    }
                    Effect_Ref.modify_(function (v3) {
                      return {
                        componentRef: v3.componentRef,
                        evalQueue: v3.evalQueue,
                        input: v3.input,
                        memoCells: v3.memoCells,
                        queryFn: v3.queryFn,
                        refCells: v3.refCells,
                        stateCells: v3.stateCells,
                        stateDirty: v3.stateDirty,
                        effectCells: {
                          queue: v3.effectCells.queue,
                          index: nextIndex
                        }
                      };
                    })(stateRef)();
                    return v.value2;
                  }
                  Effect_Ref.modify_(function (v3) {
                    return {
                      componentRef: v3.componentRef,
                      evalQueue: v3.evalQueue,
                      input: v3.input,
                      memoCells: v3.memoCells,
                      queryFn: v3.queryFn,
                      refCells: v3.refCells,
                      stateCells: v3.stateCells,
                      stateDirty: v3.stateDirty,
                      effectCells: {
                        queue: v3.effectCells.queue,
                        index: nextIndex
                      }
                    };
                  })(stateRef)();
                  return v.value2;
                })
              );
            }
            if (reason instanceof Halogen_Hooks_Internal_Eval_Types.Finalize) {
              return pure2(
                Effect_Unsafe.unsafePerformEffect(function __do() {
                  var v1 = Effect_Ref.read(stateRef)();
                  var v2 = unsafeGetCell(v1.effectCells.index)(
                    v1.effectCells.queue
                  );
                  var finalizeHook = _evalHookM(
                    _evalHook(Halogen_Hooks_Internal_Eval_Types.Queued.value)
                  )(v2.value1);
                  Effect_Ref.modify_(function (s) {
                    return {
                      componentRef: s.componentRef,
                      input: s.input,
                      memoCells: s.memoCells,
                      queryFn: s.queryFn,
                      refCells: s.refCells,
                      stateCells: s.stateCells,
                      stateDirty: s.stateDirty,
                      evalQueue: Data_Array.snoc(s.evalQueue)(finalizeHook),
                      effectCells: {
                        queue: s.effectCells.queue,
                        index: stepIndex(v1.effectCells.index)(
                          v1.effectCells.queue
                        )
                      }
                    };
                  })(stateRef)();
                  return v.value2;
                })
              );
            }
            throw new Error(
              "Failed pattern match at Halogen.Hooks.Internal.Eval (line 131, column 5 - line 190, column 15): " +
                [reason.constructor.name]
            );
          }
          if (v instanceof Halogen_Hooks_Internal_UseHookF.UseMemo) {
            if (
              reason instanceof Halogen_Hooks_Internal_Eval_Types.Initialize
            ) {
              return pure2(
                Effect_Unsafe.unsafePerformEffect(function __do() {
                  var v1 = Effect_Ref.read(stateRef)();
                  var newValue = v.value1(Data_Unit.unit);
                  Effect_Ref.modify_(function (v2) {
                    return {
                      componentRef: v2.componentRef,
                      effectCells: v2.effectCells,
                      evalQueue: v2.evalQueue,
                      input: v2.input,
                      queryFn: v2.queryFn,
                      refCells: v2.refCells,
                      stateCells: v2.stateCells,
                      stateDirty: v2.stateDirty,
                      memoCells: {
                        index: v2.memoCells.index,
                        queue: Data_Array.snoc(v1.memoCells.queue)(
                          new Data_Tuple.Tuple(v.value0, newValue)
                        )
                      }
                    };
                  })(stateRef)();
                  return v.value2(newValue);
                })
              );
            }
            return pure2(
              Effect_Unsafe.unsafePerformEffect(function __do() {
                var v1 = Effect_Ref.read(stateRef)();
                var v2 = bimap(Halogen_Hooks_Internal_Types.fromMemoValues)(
                  Halogen_Hooks_Internal_Types.fromMemoValue
                )(unsafeGetCell(v1.memoCells.index)(v1.memoCells.queue));
                var newMemos = Halogen_Hooks_Internal_Types.fromMemoValues(
                  v.value0
                );
                var m = {
                  eq: newMemos.eq,
                  old: v2.value0.memos,
                  new: newMemos.memos,
                  value: v2.value1
                };
                var nextIndex = stepIndex(v1.memoCells.index)(
                  v1.memoCells.queue
                );
                var $198 =
                  Foreign_Object.isEmpty(m["new"]) || !m.eq(m["new"])(m.old);
                if ($198) {
                  var newValue = v.value1(Data_Unit.unit);
                  var newQueue = unsafeSetCell(v1.memoCells.index)(
                    new Data_Tuple.Tuple(v.value0, newValue)
                  )(v1.memoCells.queue);
                  Effect_Ref.modify_(function (v3) {
                    return {
                      componentRef: v3.componentRef,
                      effectCells: v3.effectCells,
                      evalQueue: v3.evalQueue,
                      input: v3.input,
                      queryFn: v3.queryFn,
                      refCells: v3.refCells,
                      stateCells: v3.stateCells,
                      stateDirty: v3.stateDirty,
                      memoCells: {
                        index: nextIndex,
                        queue: newQueue
                      }
                    };
                  })(stateRef)();
                  return v.value2(newValue);
                }
                Effect_Ref.modify_(function (v3) {
                  return {
                    componentRef: v3.componentRef,
                    effectCells: v3.effectCells,
                    evalQueue: v3.evalQueue,
                    input: v3.input,
                    queryFn: v3.queryFn,
                    refCells: v3.refCells,
                    stateCells: v3.stateCells,
                    stateDirty: v3.stateDirty,
                    memoCells: {
                      queue: v3.memoCells.queue,
                      index: nextIndex
                    }
                  };
                })(stateRef)();
                return v.value2(m.value);
              })
            );
          }
          if (v instanceof Halogen_Hooks_Internal_UseHookF.UseRef) {
            if (
              reason instanceof Halogen_Hooks_Internal_Eval_Types.Initialize
            ) {
              return pure2(
                Effect_Unsafe.unsafePerformEffect(function __do() {
                  var v1 = Effect_Ref.read(stateRef)();
                  var ref = Effect_Ref["new"](v.value0)();
                  Effect_Ref.modify_(function (v2) {
                    return {
                      componentRef: v2.componentRef,
                      effectCells: v2.effectCells,
                      evalQueue: v2.evalQueue,
                      input: v2.input,
                      memoCells: v2.memoCells,
                      queryFn: v2.queryFn,
                      stateCells: v2.stateCells,
                      stateDirty: v2.stateDirty,
                      refCells: {
                        index: v2.refCells.index,
                        queue: Data_Array.snoc(v1.refCells.queue)(ref)
                      }
                    };
                  })(stateRef)();
                  return v.value1(new Data_Tuple.Tuple(v.value0, ref));
                })
              );
            }
            return pure2(
              Effect_Unsafe.unsafePerformEffect(function __do() {
                var v1 = Effect_Ref.read(stateRef)();
                var ref = unsafeGetCell(v1.refCells.index)(v1.refCells.queue);
                var value = Effect_Ref.read(ref)();
                Effect_Ref.modify_(function (v2) {
                  return {
                    componentRef: v2.componentRef,
                    effectCells: v2.effectCells,
                    evalQueue: v2.evalQueue,
                    input: v2.input,
                    memoCells: v2.memoCells,
                    queryFn: v2.queryFn,
                    stateCells: v2.stateCells,
                    stateDirty: v2.stateDirty,
                    refCells: {
                      queue: v2.refCells.queue,
                      index: stepIndex(v1.refCells.index)(v1.refCells.queue)
                    }
                  };
                })(stateRef)();
                return v.value1(new Data_Tuple.Tuple(value, ref));
              })
            );
          }
          throw new Error(
            "Failed pattern match at Halogen.Hooks.Internal.Eval (line 103, column 49 - line 230, column 39): " +
              [v.constructor.name]
          );
        };
      };
    };
  };
};
export { mkEval, evalHook, evalHookM, unsafeGetCell, unsafeSetCell, stepIndex };
