// Generated by purs version 0.15.15
import * as Data_Functor from "../Data.Functor/index.js";
var map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);
var UseState = /* #__PURE__ */ (function () {
  function UseState(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  UseState.create = function (value0) {
    return function (value1) {
      return new UseState(value0, value1);
    };
  };
  return UseState;
})();
var UseEffect = /* #__PURE__ */ (function () {
  function UseEffect(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  UseEffect.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new UseEffect(value0, value1, value2);
      };
    };
  };
  return UseEffect;
})();
var UseQuery = /* #__PURE__ */ (function () {
  function UseQuery(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  UseQuery.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new UseQuery(value0, value1, value2);
      };
    };
  };
  return UseQuery;
})();
var UseMemo = /* #__PURE__ */ (function () {
  function UseMemo(value0, value1, value2) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }
  UseMemo.create = function (value0) {
    return function (value1) {
      return function (value2) {
        return new UseMemo(value0, value1, value2);
      };
    };
  };
  return UseMemo;
})();
var UseRef = /* #__PURE__ */ (function () {
  function UseRef(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
  }
  UseRef.create = function (value0) {
    return function (value1) {
      return new UseRef(value0, value1);
    };
  };
  return UseRef;
})();
var functorUseHookF = {
  map: function (f) {
    return function (m) {
      if (m instanceof UseState) {
        return new UseState(m.value0, map(f)(m.value1));
      }
      if (m instanceof UseEffect) {
        return new UseEffect(m.value0, m.value1, f(m.value2));
      }
      if (m instanceof UseQuery) {
        return new UseQuery(m.value0, m.value1, f(m.value2));
      }
      if (m instanceof UseMemo) {
        return new UseMemo(m.value0, m.value1, map(f)(m.value2));
      }
      if (m instanceof UseRef) {
        return new UseRef(m.value0, map(f)(m.value1));
      }
      throw new Error(
        "Failed pattern match at Halogen.Hooks.Internal.UseHookF (line 0, column 0 - line 0, column 0): " +
          [m.constructor.name]
      );
    };
  }
};
export { UseState, UseEffect, UseQuery, UseMemo, UseRef, functorUseHookF };
